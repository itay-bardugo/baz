version: '3.7'
services:
  mysql:
    shm_size: 1000000000
    build:
      context: ./mysql/
      dockerfile: ./Dockerfile
    container_name: baz-mysql
    tty: true
    command: --innodb_use_native_aio=0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456

    volumes:
      - ./mysql/mysql-data/:/var/lib/mysql/
    ports:
      - "3306:3306"
  wsgi:
    shm_size: 1000000000
    container_name: baz-wsgi
    restart: always
    build:
      context: ../
      dockerfile: docker-services/python/Dockerfile
    tty: true
    volumes:
      - ../:/home/centos
    depends_on:
      - mysql
      - rabbitMQ
    command: python3.8 baz/baz/manage.py runserver 0.0.0.0:8080
    env_file:
      - ../baz/.env

  wsgi-scheduelr:
    shm_size: 1000000000
    container_name: baz-wsgi-scheduler
    restart: always
    build:
      context: ../
      dockerfile: docker-services/python/scheduler/Dockerfile
    tty: true
    volumes:
      - ../:/home/centos
    depends_on:
      - mysql
      - rabbitMQ
    command: python3.8 scheduler/manage.py runserver 0.0.0.0:8082
    env_file:
      - ../scheduler/.env

  wsgi-mailer:
    shm_size: 1000000000
    container_name: baz-wsgi-mailer
    restart: always
    build:
      context: ../
      dockerfile: docker-services/python/mailer/Dockerfile
    tty: true
    volumes:
      - ../:/home/centos
    depends_on:
      - mysql
      - rabbitMQ
    command: python3.8 mailer/manage.py runserver 0.0.0.0:8083
    env_file:
      - ../mailer/.env

  wsgi-scheduelr-timer-stop-wroker01:
    shm_size: 1000000000
    container_name: wsgi-scheduelr-timer-stop-wroker01
    restart: always
    build:
      context: ../
      dockerfile: docker-services/python/scheduler/Dockerfile
    tty: true
    volumes:
      - ../:/home/centos
    depends_on:
      - mysql
      - rabbitMQ
      - redis
    command: python3.8 -m workers.timers.stop
    env_file:
      - ../scheduler/.env


  wsgi-scheduelr-timer-add-wroker01:
    shm_size: 1000000000
    #container_name: wsgi-scheduelr-timer-add-wroker01
    restart: always
    build:
      context: ../
      dockerfile: docker-services/python/scheduler/Dockerfile
    tty: true
    volumes:
      - ../:/home/centos
    depends_on:
      - mysql
      - rabbitMQ
      - redis
    command: python3.8 -m workers.timers.add
    env_file:
      - ../scheduler/.env
    deploy:
      mode: replicated
      replicas: 2

  wsgi-mailer_start-worker:
    shm_size: 1000000000
    #container_name: wsgi-scheduelr-timer-add-wroker01
    restart: always
    build:
      context: ../
      dockerfile: docker-services/python/mailer/Dockerfile
    tty: true
    volumes:
      - ../:/home/centos
    depends_on:
      - mysql
      - rabbitMQ
      - redis
    command: python3.8 -m workers.emails.start
    env_file:
      - ../mailer/.env
#    deploy:
#      mode: replicated
#      replicas: 4

  wsgi-mailer_send-worker:
    shm_size: 1000000000
    #container_name: wsgi-scheduelr-timer-add-wroker01
    restart: always
    build:
      context: ../
      dockerfile: docker-services/python/mailer/Dockerfile
    tty: true
    volumes:
      - ../:/home/centos
    depends_on:
      - mysql
      - rabbitMQ
      - redis
    command: python3.8 -m workers.emails.send
    env_file:
      - ../mailer/.env
  #    deploy:
  #      mode: replicated
  #      replicas: 4


  wsgi-mailer_log-worker:
    shm_size: 1000000000
    #container_name: wsgi-scheduelr-timer-add-wroker01
    restart: always
    build:
      context: ../
      dockerfile: docker-services/python/mailer/Dockerfile
    tty: true
    volumes:
      - ../:/home/centos
    depends_on:
      - mysql
      - rabbitMQ
      - redis
    command: python3.8 -m workers.emails.log
    env_file:
      - ../mailer/.env
  #    deploy:
  #      mode: replicated
  #      replicas: 4

  wsgi-bazinga_report-worker:
    shm_size: 1000000000
    #container_name: wsgi-scheduelr-timer-add-wroker01
    restart: always
    build:
      context: ../
      dockerfile: docker-services/python/mailer/Dockerfile
    tty: true
    volumes:
      - ../:/home/centos
    depends_on:
      - mysql
      - rabbitMQ
      - redis
    command: python3.8 -m workers.bazinga.report
    env_file:
      - ../baz/.env
    #    deploy:
    #      mode: replicated
    #      replicas: 4
  nginx:
    container_name: baz-nginx
    build: ./nginx
    restart: always
    tty: true
    links:
      - wsgi
      - wsgi-scheduelr

    ports:
      - "80:80"
      - "8082:8082"
      - "8083:8083"

  rabbitMQ:
    image: rabbitmq:3-management
    container_name: baz-rabbit
    ports:
      - "15672:15672"
      - "5672:5672"

  redis:
    build:
      context: ./redis/
      dockerfile: ./Dockerfile
    container_name: baz-redis
    volumes:
      - ./redis/data/:/data
    ports:
      - "6379:6379"